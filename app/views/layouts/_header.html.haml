#nav.ui.vertical.inverted.left.menu.sidebar.visible
  .item
    .ui.large.inverted.header
      = APP_CONFIG['site_name']
  - if user_signed_in?    
    .item
      %a.ui.logo.icon.image{href: show_user_profile_path(current_user.screen_name)}
        %img{src: current_user.profile_picture.url(:small)}
      %a{href: show_user_profile_path(current_user.screen_name)}
        = current_user.screen_name
    %a.item
      = semantic_icon(:pencil)
      Ask a question
    %a.item{href: '/inbox'}
      = semantic_icon(:inbox)
      - unless inbox_count.nil?
        .ui.horizontal.purple.label= inbox_count
      Inbox      
    .item
      .ui.small.inverted.header
        Timelines
      .menu
        %a.item{href: root_path}
          Main Timeline
        %a.item{href: public_timeline_path}
          Public Timeline
        - current_user.groups.each do |group|
          %a.item{href: group_timeline_path(group.name)}
            = group.display_name
    .item
      .ui.small.inverted.header
        Notifications
      .menu
        %a.item{href: notifications_path}
          View All
          - unless notification_count.nil?
            .ui.horizontal.purple.label= notification_count
        %a.item{href: notifications_path('answer')}
          Answers
          - if Notification.where(target_type: "Answer", new: true).count >= 1
            .ui.horizontal.label
              = Notification.where(target_type: "Answer", new: true).count
        %a.item{href: notifications_path('smile')}
          Smiles
          - if Notification.where(target_type: "Smile", new: true).count >= 1
            .ui.horizontal.label
              = Notification.where(target_type: "Smile", new: true).count
        %a.item{href: notifications_path('comment')}
          Comments
          - if Notification.where(target_type: "Comment", new: true).count >= 1
            .ui.horizontal.label
              = Notification.where(target_type: "Comment", new: true).count
        %a.item{href: notifications_path('relationship')}
          New Followers
          - if Notification.where(target_type: "Relationship", new: true).count >= 1
            .ui.horizontal.label
              = Notification.where(target_type: "Relationship", new: true).count
    .item
      .ui.small.inverted.header
        Settings
      .menu
        %a.item{href: edit_user_registration_path}
          Account
        %a.item{href: edit_user_profile_path}
          Profile
        %a.item{href: edit_user_privacy_path}
          Privacy
        %a.item{href: services_path}
          Sharing  
    .item
      .ui.small.inverted.header
        Moderation
      .menu
        %a.item{href: moderation_path}
          View All
          - if Report.where(deleted: false).count >= 1
            .ui.horizontal.red.label= Report.where(deleted: false).count
        %a.item{href: moderation_path('answer')}
          Answers
          - if Report.where(type: "Reports::Answer", deleted: false).count >= 1
            .ui.horizontal.label= Report.where(type: "Reports::Answer", deleted: false).count
        %a.item{href: moderation_path('comment')}
          Comments
          - if Report.where(type: "Reports::Comment", deleted: false).count >= 1
            .ui.horizontal.label= Report.where(type: "Reports::Comment", deleted: false).count
        %a.item{href: moderation_path('user')}
          Users
          - if Report.where(type: "Reports::User", deleted: false).count >= 1
            .ui.horizontal.label= Report.where(type: "Reports::User", deleted: false).count
        %a.item{href: moderation_path('question')}
          Questions
          - if Report.where(type: "Reports::Question", deleted: false).count >= 1
            .ui.horizontal.label= Report.where(type: "Reports::Question", deleted: false).count    
    .item
      .ui.small.inverted.header
        Administration
      .menu
        %a.item{href: rails_admin_path}
          Control Panel
        %a.item{href: sidekiq_web_path}
          Sidekiq
    %a.item{href: destroy_user_session_path, data: { method: :delete}}
      = semantic_icon('sign out')
      Logout
  - else
    %a.item{href: new_user_session_path}
      Sign In
    %a.item{href: new_user_registration_path}
      Sign Up

/ 
  %nav.navbar.navbar-inverse.navbar-fixed-top{role: "navigation"}
    .container{class: ios_web_app? ? "ios-web-app" : ''}
      .navbar-header
        %button.navbar-toggle{"data-target" => "#j2-main-navbar-collapse", "data-toggle" => "collapse", type: "button"}
          %span.sr-only Toggle navigation
          - if user_signed_in?
            - unless inbox_count.nil? or notification_count.nil?
              %span.icon-bar.navbar--inbox-animation
              %span.icon-bar.navbar--inbox-animation
              %span.icon-bar.navbar--inbox-animation
            - else
              %span.icon-bar
              %span.icon-bar
              %span.icon-bar
          - else
            %span.icon-bar
            %span.icon-bar
            %span.icon-bar
        %a.navbar-brand{href: "/"}= APP_CONFIG['site_name']
      #j2-main-navbar-collapse.collapse.navbar-collapse
        - if user_signed_in?
          %ul.nav.navbar-nav
            = nav_entry "Timeline", root_path
            = nav_entry "Inbox", "/inbox", badge: inbox_count
          %ul.nav.navbar-nav.navbar-right
            = render "layouts/notifications"
            %li.hidden-xs{"data-toggle" => "tooltip", "data-placement" => "bottom", title: "Ask a question"}
              .btn.btn-link.navbar-btn{name: "toggle-all-ask", "data-target" => "#modal-ask-followers", "data-toggle" => "modal", :type => "button"}
                %i.fa.fa-pencil-square-o
            = render "layouts/profile"
        - else
          %ul.nav.navbar-nav.navbar-right
            = nav_entry "Sign in", new_user_session_path
            = nav_entry "Sign up", new_user_registration_path

  - if user_signed_in?
    = render 'shared/modal_ask_followers'
    %button.btn.btn-primary.btn-fab.visible-xs{"data-target" => "#modal-ask-followers", "data-toggle" => "modal", :type => "button"}
      %i.fa.fa-pencil-square-o
